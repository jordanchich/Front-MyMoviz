{"ast":null,"code":"var _jsxFileName = \"/Users/youssef/Documents/LaCapsule/Project/mymoviz/front/src/App.js\";\nimport React, { Component } from 'react'; // Import de React et de son élément \"Component\"\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'; // Obligatoire pour utiliser bootstrap\n\nimport { Container, Col, Row, Button, Card, CardImg, CardText, CardBody, CardTitle, Nav, NavLink, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Obligatoire pour utiliser fontawesome avec React\n\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'; // Il faut spécifier chaque icons que l'on souhaite récupérer\n\nclass App extends Component {\n  // Popover Reactstrap -----\n  constructor(props) {\n    super(props); // On injecte this dans nos fonctions grace à la méthode \"bind\"\n\n    this.toggle = this.toggle.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickLikeOn = this.handleClickLikeOn.bind(this);\n    this.handleClickLikeOff = this.handleClickLikeOff.bind(this);\n    this.state = {\n      popoverOpen: false,\n      viewOnlyLike: false,\n      // Permet de voir uniquement les Movies likés\n      moviesCount: 0,\n      // Nombre de films likés (dans le compteur)\n      moviesNameList: [],\n      // Tableau qui contient tous les films likés\n      movies: [],\n      moviesLiked: [],\n      status: null\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      status: 'API is processing ...'\n    });\n  }\n\n  componentDidMount() {\n    // var ctx = this; // Si ES5\n    fetch('http://localhost:3000/movies').then(response => {\n      return response.json();\n    }).then(data => {\n      this.setState({\n        movies: data.movieList,\n        status: null\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n    fetch('http://localhost:3000/mymovies').then(response => {\n      return response.json();\n    }).then(data => {\n      var moviesNameListCopy = data.movies.map(function (movie) {\n        return movie.title;\n      });\n      this.setState({\n        moviesLiked: data.movies,\n        moviesCount: data.movies.length,\n        moviesNameList: moviesNameListCopy\n      });\n      console.log(this.state.moviesLiked);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  // Création d'une fonction acceptant 2 arguments (ici \"isLike\" et \"name\")\n  handleClick(isLike, name) {\n    var moviesNameListCopy = [...this.state.moviesNameList]; // \"Je déverse l'état de mon state dans une variable, parce que c'est un tableau\"\n\n    if (isLike) {\n      moviesNameListCopy.push(name); // Incrémente l'état \"moviesCount\" et on ajoute le titre du film liké dans \"moviesNameList\"\n\n      this.setState({\n        moviesCount: this.state.moviesCount + 1,\n        moviesNameList: moviesNameListCopy\n      });\n    } else {\n      var index = moviesNameListCopy.indexOf(name); // On recherche l'index de name dans le tableau moviesNameListCopy\n\n      moviesNameListCopy.splice(index, 1); // On supprime l'élément trouvé\n      // Décrément l'état \"moviesCount\" et on supprime le titre du film déliké dans \"moviesNameList\"\n\n      this.setState({\n        moviesCount: this.state.moviesCount - 1,\n        moviesNameList: moviesNameListCopy\n      });\n    }\n  }\n\n  handleClickLikeOn() {\n    // Change l'état de viewOnlyLike à true (pour afficher les films uniquements likés)\n    this.setState({\n      viewOnlyLike: true\n    });\n  }\n\n  handleClickLikeOff() {\n    // Change l'état de viewOnlyLike à false (pour afficher tous les derniers films)\n    this.setState({\n      viewOnlyLike: false\n    });\n  }\n\n  toggle() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n  } // --------\n\n\n  render() {\n    // const moviesData = [\n    //   {\n    //     name: 'L\\'Odyssée de Pi',\n    //     desc: ' Après que leur bateau est victime d\\'une violente tempête et coule au fond du Pacifique, un adolescent et un tigre du Bengale ...',\n    //     img: '/pi.jpg'\n    //   }, {\n    //     name: 'Maléfique',\n    //     desc: 'Poussée par la vengeance et une volonté farouche deprotéger les terres qu\\'elle préside, Maléfique place ...',\n    //     img: '/malefique.jpg'\n    //   }, {\n    //     name: 'Les Aventures de Tintin',\n    //     desc: 'Parce qu\\'il achète la maquette d\\'un bateau appelé laLicorne, Tintin, un jeune reporter, se retrouve entraîné dans unefantastique aventure ...',\n    //     img: '/tintin.jpg'\n    //   }, {\n    //     name: 'L\\'Odyssée de Pi',\n    //     desc: ' Après que leur bateau est victime d\\'une violente tempête et coule au fond du Pacifique, un adolescent et un tigre du Bengale ...',\n    //     img: '/pi.jpg'\n    //   }, {\n    //     name: 'Maléfique',\n    //     desc: 'Poussée par la vengeance et une volonté farouche deprotéger les terres qu\\'elle préside, Maléfique place ...',\n    //     img: '/malefique.jpg'\n    //   }, {\n    //     name: 'Les Aventures de Tintin',\n    //     desc: 'Parce qu\\'il achète la maquette d\\'un bateau appelé laLicorne, Tintin, un jeune reporter, se retrouve entraîné dans unefantastique aventure ...',\n    //     img: '/tintin.jpg'\n    //   }\n    // ];\n    var ctx = this; // On donne à ctx la valeur de this (du Composant App), pour pouvoir l'utiliser dans le map (qui a un \"this\" différent)\n    // Génère un tableau \"movieList\" contenant chacun des films\n    // On passe en propriétés \"movieName\", \"movieDesc\", \"movieImg\" contenants chacun ses valeurs respectives\n\n    var movieList = this.state.movies.map(function (movie, i) {\n      var isLiked = false;\n\n      for (var j = 0; j < ctx.state.moviesLiked.length; j++) {\n        if (ctx.state.moviesLiked[j].idMovieDB === movie.id) {\n          isLiked = true;\n          break;\n        }\n      }\n\n      return React.createElement(Movies, {\n        key: i,\n        isLiked: isLiked,\n        movieId: movie.id,\n        movieName: movie.title,\n        movieDesc: movie.overview,\n        movieImg: movie.poster_path,\n        displayOnlyLike: ctx.state.viewOnlyLike,\n        handleClickParent: ctx.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      });\n    }); // Génère un tableau \"moviesNameList\" contenant tous les noms des films\n    // var moviesNameList = moviesData.map(function(movie) {\n    //   return movie.name;\n    // });\n    // console.log(moviesNameList);\n    // Création d'une variable moviesLast contenant les 3 derniers éléments du tableau \"this.props.moviesNameList\"\n\n    var moviesLast = this.state.moviesNameList.slice(-3); // la méthode \"join()\" sert à concaténer chaque élément d'un tableau, et permet aussi d'y rajouter des caractères entre\n    // tableau.join(', ') rajoute une virgule et un espace entre chaque élément, sauf le dernier\n\n    if (this.state.moviesCount === 0) {\n      moviesLast = \"aucun film sélectionné\";\n    } else if (this.state.moviesCount > 3) {\n      moviesLast = moviesLast.join(', ') + '...';\n    } else {\n      moviesLast = moviesLast.join(', ') + '.';\n    } // Condition ternaire : \"condition ? true : false\"\n\n    /* Si moviesCount est supérieur à 1 ?\n        (true) On écrit \"films\" :\n        (false) Sinon \"film\"\n    */\n    // Avec Reactstrap, on remplace nos classes \"container\", \"Row\" et \"Col\" par des balises <Container>, <Row> et <Col>\n\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      style: styles.navMargin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"logo.png\",\n      alt: \"logo movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      href: \"#\",\n      style: styles.colorWhite,\n      onClick: this.handleClickLikeOff,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Last releases\"), React.createElement(NavLink, {\n      href: \"#\",\n      style: styles.colorWhite,\n      onClick: this.handleClickLikeOn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"My Movies\"), React.createElement(Button, {\n      id: \"Popover1\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.moviesCount, \" \", this.state.moviesCount > 1 ? 'films' : 'film'), React.createElement(Popover, {\n      placement: \"bottom\",\n      isOpen: this.state.popoverOpen,\n      target: \"Popover1\",\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(PopoverHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Derniers films ajout\\xE9s\"), React.createElement(PopoverBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, moviesLast))), React.createElement(\"h1\", {\n      style: {\n        color: '#F3F3F3'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.state.status), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, movieList));\n  }\n\n}\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      like: this.props.isLiked\n    };\n  }\n\n  handleClick() {\n    var isLike = !this.state.like;\n    this.setState({\n      like: isLike\n    });\n\n    if (isLike) {\n      // Je veux poster un film\n      fetch('http://localhost:3000/mymovies', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: \"title=\".concat(this.props.movieName, \"&overview=\").concat(this.props.movieDesc, \"&poster_path=\").concat(this.props.movieImg, \"&idMovieDB=\").concat(this.props.movieId)\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      // Je veux supprimer un film\n      fetch(\"http://localhost:3000/mymovies/\".concat(this.props.movieId), {\n        method: 'DELETE'\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n\n    ;\n    console.log('clic détecté', isLike);\n    this.props.handleClickParent(isLike, this.props.movieName); // J'appelle la fonction contenue dans mon parent avec 2 paramètres (liké ou non, et le nom du film)\n  } // Revient à faire ça :\n\n  /* async handleClick() {\n    await this.setState({\n      like: !this.state.like\n    });\n    console.log('clic détecté', this.state.like);\n  } */\n\n\n  render() {\n    // On redéclare notre style qui sera utilisé sur le coeur, pour pouvoir le modifier en dynamique\n    var colorHeart = {\n      color: 'grey',\n      position: 'absolute',\n      top: '3%',\n      right: '5%',\n      height: 30,\n      width: 30\n    };\n\n    if (this.state.like) {\n      colorHeart.color = '#FF5B53';\n    }\n\n    var isDisplay = {\n      marginBottom: 15\n    }; // Si l'état like est \"false\" ET QUE displayOnlyLike est \"true\", on cache le composant Movie sur lequel on est\n\n    if (!this.state.like && this.props.displayOnlyLike) {\n      isDisplay.display = 'none';\n    } // Pour les Colonnes responsives, on met directement \"xs\", \"sm\", \"md\", \"xl\" et \"lg\" suivi d'un égal et du nombre de colonnes que doit prendre notre élément (entre guillemets)\n\n\n    return React.createElement(Col, {\n      xs: \"12\",\n      sm: \"6\",\n      lg: \"3\",\n      style: isDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: \"https://image.tmdb.org/t/p/w500\".concat(this.props.movieImg),\n      alt: \"Card image cap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      style: styles.cardHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, this.props.movieName.substr(0, 20) + ' ...'), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, this.props.movieDesc.substr(0, 80) + ' ...')), React.createElement(FontAwesomeIcon, {\n      icon: faHeart,\n      style: colorHeart,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })));\n  }\n\n} // Déclaration d'un objet styles contenant tout le style de nos composants présents dans le fichier\n\n\nvar styles = {\n  navMargin: {\n    marginBottom: 10,\n    paddingTop: 5\n  },\n  colorWhite: {\n    color: 'white'\n  },\n  cardHeight: {\n    height: 200\n  }\n}; // export default (toujours présent)\n\nexport default App;","map":{"version":3,"sources":["/Users/youssef/Documents/LaCapsule/Project/mymoviz/front/src/App.js"],"names":["React","Component","Container","Col","Row","Button","Card","CardImg","CardText","CardBody","CardTitle","Nav","NavLink","Popover","PopoverHeader","PopoverBody","FontAwesomeIcon","faHeart","App","constructor","props","toggle","bind","handleClick","handleClickLikeOn","handleClickLikeOff","state","popoverOpen","viewOnlyLike","moviesCount","moviesNameList","movies","moviesLiked","status","componentWillMount","setState","componentDidMount","fetch","then","response","json","data","movieList","catch","error","console","moviesNameListCopy","map","movie","title","length","log","isLike","name","push","index","indexOf","splice","render","ctx","i","isLiked","j","idMovieDB","id","overview","poster_path","moviesLast","slice","join","styles","navMargin","colorWhite","color","Movies","like","method","headers","body","movieName","movieDesc","movieImg","movieId","handleClickParent","colorHeart","position","top","right","height","width","isDisplay","marginBottom","displayOnlyLike","display","cardHeight","substr","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; // Import de React et de son élément \"Component\"\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'; // Obligatoire pour utiliser bootstrap\nimport {\n  Container,\n  Col,\n  Row,\n  Button,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Nav,\n  NavLink,\n  Popover,\n  PopoverHeader,\n  PopoverBody\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome' // Obligatoire pour utiliser fontawesome avec React\nimport { faHeart } from '@fortawesome/free-solid-svg-icons' // Il faut spécifier chaque icons que l'on souhaite récupérer\n\nclass App extends Component {\n  // Popover Reactstrap -----\n  constructor(props) {\n    super(props);\n\n    // On injecte this dans nos fonctions grace à la méthode \"bind\"\n    this.toggle = this.toggle.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickLikeOn = this.handleClickLikeOn.bind(this);\n    this.handleClickLikeOff = this.handleClickLikeOff.bind(this);\n    this.state = {\n      popoverOpen: false,\n      viewOnlyLike: false, // Permet de voir uniquement les Movies likés\n      moviesCount: 0, // Nombre de films likés (dans le compteur)\n      moviesNameList: [], // Tableau qui contient tous les films likés\n      movies: [],\n      moviesLiked: [],\n      status: null\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      status: 'API is processing ...'\n    });\n  };\n\n  componentDidMount() {\n    // var ctx = this; // Si ES5\n    fetch('http://localhost:3000/movies').then((response) => {\n      return response.json();\n    }).then((data) => {\n      this.setState({ movies: data.movieList, status: null });\n    }).catch((error) => {\n      console.error(error);\n    });\n\n    fetch('http://localhost:3000/mymovies').then((response) => {\n      return response.json();\n    }).then((data) => {\n      var moviesNameListCopy = data.movies.map(function (movie) {\n        return movie.title;\n      });\n      this.setState({\n        moviesLiked: data.movies,\n        moviesCount: data.movies.length,\n        moviesNameList: moviesNameListCopy\n      });\n      console.log(this.state.moviesLiked);\n    }).catch((error) => {\n      console.error(error);\n    });\n  };\n\n  // Création d'une fonction acceptant 2 arguments (ici \"isLike\" et \"name\")\n  handleClick(isLike, name) {\n    var moviesNameListCopy = [...this.state.moviesNameList]; // \"Je déverse l'état de mon state dans une variable, parce que c'est un tableau\"\n    if (isLike) {\n      moviesNameListCopy.push(name);\n      // Incrémente l'état \"moviesCount\" et on ajoute le titre du film liké dans \"moviesNameList\"\n      this.setState({\n        moviesCount: this.state.moviesCount + 1,\n        moviesNameList: moviesNameListCopy\n      });\n    } else {\n      var index = moviesNameListCopy.indexOf(name); // On recherche l'index de name dans le tableau moviesNameListCopy\n      moviesNameListCopy.splice(index, 1); // On supprime l'élément trouvé\n      // Décrément l'état \"moviesCount\" et on supprime le titre du film déliké dans \"moviesNameList\"\n      this.setState({\n        moviesCount: this.state.moviesCount - 1,\n        moviesNameList: moviesNameListCopy\n      });\n    }\n  }\n\n  handleClickLikeOn() {\n    // Change l'état de viewOnlyLike à true (pour afficher les films uniquements likés)\n    this.setState({\n      viewOnlyLike: true\n    });\n  }\n\n  handleClickLikeOff() {\n    // Change l'état de viewOnlyLike à false (pour afficher tous les derniers films)\n    this.setState({\n      viewOnlyLike: false\n    });\n  }\n\n  toggle() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    });\n  }\n  // --------\n\n  render() {\n    // const moviesData = [\n    //   {\n    //     name: 'L\\'Odyssée de Pi',\n    //     desc: ' Après que leur bateau est victime d\\'une violente tempête et coule au fond du Pacifique, un adolescent et un tigre du Bengale ...',\n    //     img: '/pi.jpg'\n    //   }, {\n    //     name: 'Maléfique',\n    //     desc: 'Poussée par la vengeance et une volonté farouche deprotéger les terres qu\\'elle préside, Maléfique place ...',\n    //     img: '/malefique.jpg'\n    //   }, {\n    //     name: 'Les Aventures de Tintin',\n    //     desc: 'Parce qu\\'il achète la maquette d\\'un bateau appelé laLicorne, Tintin, un jeune reporter, se retrouve entraîné dans unefantastique aventure ...',\n    //     img: '/tintin.jpg'\n    //   }, {\n    //     name: 'L\\'Odyssée de Pi',\n    //     desc: ' Après que leur bateau est victime d\\'une violente tempête et coule au fond du Pacifique, un adolescent et un tigre du Bengale ...',\n    //     img: '/pi.jpg'\n    //   }, {\n    //     name: 'Maléfique',\n    //     desc: 'Poussée par la vengeance et une volonté farouche deprotéger les terres qu\\'elle préside, Maléfique place ...',\n    //     img: '/malefique.jpg'\n    //   }, {\n    //     name: 'Les Aventures de Tintin',\n    //     desc: 'Parce qu\\'il achète la maquette d\\'un bateau appelé laLicorne, Tintin, un jeune reporter, se retrouve entraîné dans unefantastique aventure ...',\n    //     img: '/tintin.jpg'\n    //   }\n    // ];\n\n    var ctx = this; // On donne à ctx la valeur de this (du Composant App), pour pouvoir l'utiliser dans le map (qui a un \"this\" différent)\n    // Génère un tableau \"movieList\" contenant chacun des films\n    // On passe en propriétés \"movieName\", \"movieDesc\", \"movieImg\" contenants chacun ses valeurs respectives\n    var movieList = this.state.movies.map(function (movie, i) {\n      var isLiked = false;\n      for (var j = 0; j < ctx.state.moviesLiked.length; j++) {\n        if (ctx.state.moviesLiked[j].idMovieDB === movie.id) {\n          isLiked = true;\n          break;\n        }\n      }\n      return <Movies key={i} isLiked={isLiked} movieId={movie.id} movieName={movie.title} movieDesc={movie.overview} movieImg={movie.poster_path} displayOnlyLike={ctx.state.viewOnlyLike} handleClickParent={ctx.handleClick} />;\n    });\n\n    // Génère un tableau \"moviesNameList\" contenant tous les noms des films\n    // var moviesNameList = moviesData.map(function(movie) {\n    //   return movie.name;\n    // });\n    // console.log(moviesNameList);\n\n    // Création d'une variable moviesLast contenant les 3 derniers éléments du tableau \"this.props.moviesNameList\"\n    var moviesLast = this.state.moviesNameList.slice(-3);\n\n    // la méthode \"join()\" sert à concaténer chaque élément d'un tableau, et permet aussi d'y rajouter des caractères entre\n    // tableau.join(', ') rajoute une virgule et un espace entre chaque élément, sauf le dernier\n    if (this.state.moviesCount === 0) {\n      moviesLast = \"aucun film sélectionné\";\n    } else if (this.state.moviesCount > 3) {\n      moviesLast = moviesLast.join(', ') + '...';\n    } else {\n      moviesLast = moviesLast.join(', ') + '.';\n    }\n\n    // Condition ternaire : \"condition ? true : false\"\n    /* Si moviesCount est supérieur à 1 ?\n        (true) On écrit \"films\" :\n        (false) Sinon \"film\"\n    */\n\n    // Avec Reactstrap, on remplace nos classes \"container\", \"Row\" et \"Col\" par des balises <Container>, <Row> et <Col>\n    return (<Container>\n      {/* Appel du composant Header avec passage de propriétés moviesCount et moviesNameList */}\n      <Nav style={styles.navMargin}>\n        <img src=\"logo.png\" alt=\"logo movie\" />\n        <NavLink href=\"#\" style={styles.colorWhite} onClick={this.handleClickLikeOff}>Last releases</NavLink>\n        <NavLink href=\"#\" style={styles.colorWhite} onClick={this.handleClickLikeOn}>My Movies</NavLink>\n        <Button id=\"Popover1\" onClick={this.toggle}>\n          {this.state.moviesCount} {this.state.moviesCount > 1 ? 'films' : 'film'}\n        </Button>\n        <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.toggle}>\n          <PopoverHeader>Derniers films ajoutés</PopoverHeader>\n          <PopoverBody>{moviesLast}</PopoverBody>\n        </Popover>\n      </Nav>\n      <h1 style={{ color: '#F3F3F3' }}>{this.state.status}</h1>\n      <Row>\n        {/* Appel de movieList */}\n        {movieList}\n      </Row>\n    </Container>);\n  }\n}\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      like: this.props.isLiked\n    };\n  }\n\n  handleClick() {\n    var isLike = !this.state.like;\n    this.setState({\n      like: isLike\n    });\n    if (isLike) {\n      // Je veux poster un film\n      fetch('http://localhost:3000/mymovies', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `title=${this.props.movieName}&overview=${this.props.movieDesc}&poster_path=${this.props.movieImg}&idMovieDB=${this.props.movieId}`\n      }).catch((error) => {\n        console.error(error);\n      });\n    } else {\n      // Je veux supprimer un film\n      fetch(`http://localhost:3000/mymovies/${this.props.movieId}`, { method: 'DELETE' }).catch((error) => {\n        console.error(error);\n      });\n    };\n    console.log('clic détecté', isLike);\n    this.props.handleClickParent(isLike, this.props.movieName); // J'appelle la fonction contenue dans mon parent avec 2 paramètres (liké ou non, et le nom du film)\n  }\n\n  // Revient à faire ça :\n  /* async handleClick() {\n    await this.setState({\n      like: !this.state.like\n    });\n    console.log('clic détecté', this.state.like);\n  } */\n\n  render() {\n    // On redéclare notre style qui sera utilisé sur le coeur, pour pouvoir le modifier en dynamique\n    var colorHeart = {\n      color: 'grey',\n      position: 'absolute',\n      top: '3%',\n      right: '5%',\n      height: 30,\n      width: 30\n    };\n\n    if (this.state.like) {\n      colorHeart.color = '#FF5B53';\n    }\n\n    var isDisplay = {\n      marginBottom: 15\n    };\n\n    // Si l'état like est \"false\" ET QUE displayOnlyLike est \"true\", on cache le composant Movie sur lequel on est\n    if (!this.state.like && this.props.displayOnlyLike) {\n      isDisplay.display = 'none';\n    }\n\n    // Pour les Colonnes responsives, on met directement \"xs\", \"sm\", \"md\", \"xl\" et \"lg\" suivi d'un égal et du nombre de colonnes que doit prendre notre élément (entre guillemets)\n    return (<Col xs=\"12\" sm=\"6\" lg=\"3\" style={isDisplay}>\n      <Card>\n        {/* top est un élémént booléen, il peut être spécifié seul, ou suivi d'un ={true} */\n        }\n        <CardImg top={true} width=\"100%\" src={`https://image.tmdb.org/t/p/w500${this.props.movieImg}`} alt=\"Card image cap\" />\n        <CardBody style={styles.cardHeight}>\n          <CardTitle>{this.props.movieName.substr(0, 20) + ' ...'}</CardTitle>\n          <CardText>{this.props.movieDesc.substr(0, 80) + ' ...'}</CardText>\n        </CardBody>\n        {/* Appel de l'icone fontawesome en utilisant une balise autofermante FontAwesomeIcon (élément importé tout en haut du code) */\n        }\n        <FontAwesomeIcon icon={faHeart} style={colorHeart} onClick={this.handleClick} />\n      </Card>\n    </Col>);\n  }\n}\n\n// Déclaration d'un objet styles contenant tout le style de nos composants présents dans le fichier\nvar styles = {\n  navMargin: {\n    marginBottom: 10,\n    paddingTop: 5\n  },\n  colorWhite: {\n    color: 'white'\n  },\n  cardHeight: {\n    height: 200\n  }\n};\n\n// export default (toujours présent)\nexport default App;\n"]},"metadata":{},"sourceType":"module"}